package pixelding

/*	+ - +
  	|   |
	+ - +
*/
const (
	SingleFrame = "\u250C\u2500\u2510\u2502*\u2502\u2514\u2500\u2518"
	DoubleFrame = "\u2554\u2550\u2557\u2551*\u2551\u255A\u2550\u255D"
	RoundFrame  = "\u256D\u2500\u256E\u2502*\u2502\u2570\u2500\u256F"
	BlockFrame  = "\u259B\u2580\u259C\u258C*\u2590\u2599\u2584\u259F"
	TextFrame   = "+-+|*|+-+"
)
const HBar = "\u2588\u258F\u258E\u258D\u258C\u258B\u258A\u2589"

const (
	Dot1x1Pattern   = 0b01010101 // - - - - - - - - - -
	Dot2x2Pattern   = 0b00110011 // --  --  --  --  --
	Dot4x4Pattern   = 0b00001111 // ----    ----    ----
	Dot1x3Pattern   = 0b00010001 // -   -   -   -   -   -
	Dot3x2x1Pattern = 0b00100111 // ---  -  ---  -  ---  -
	Dot6x2Pattern   = 0b00111111 // ------  ------  ------
	Dot7x1Pattern   = 0b01111111 // ------- ------- -------
	Dot1x3x1Pattern = 0b01011101 // - --- - - --- - - ---
	Dot5x1x1Pattern = 0b01011111 // ----- - ----- - ----- -
	Dot1x7Pattern   = 0b00000001 // -       -       -
	Dot7x2Pattern   = 0b00111111 // -----  -----  -----
)

/*
const SingleFrame = [9]string{
	string(0x250C), string(0x2500), string(0x2510),
	string(0x2502), string(32), string(0x2502),
	string(0x2514), string(0x2500), string(0x2518)}
*/
// Load the standard Demo Stamp
//----------------------------------------------------------------------------------------------------------------------
func (p *PixelDING) LoadStdStamp() *PixelStamp {
	StdStamp := PixelStamp{
		false, 0,
		[]uint64{
			0b00111111111111111111111111110011111111111111111111111100,
			0b01000000000000000000000000000111111111111111111111111110,
			0b10011111000000000000000000011000001100100111011000001111,
			0b10011000100000000000000000011001110100100111010011110111,
			0b10011000101000000000000010011001110100100011010011111111,
			0b10011000100000000000000010011001110100100101010011111111,
			0b10011111001010001001110010011001110100100110010011000111,
			0b10011000001001010010001010011001110100100111010011110111,
			0b10011000001000100011111010011001110100100111010011110111,
			0b10011000001001010010000010011001110100100111010011110111,
			0b10011000001010001001110011011000001100100111011000001111,
			0b01000000000000000000000000001111111111111111111111111110,
			0b00111111111111111111111111100111111111111111111111111100},
	}
	return &StdStamp
}

// Load the standard Demo Font
//----------------------------------------------------------------------------------------------------------------------
func (p *PixelDING) LoadStdFont() *PixelFont {
	StdFont := PixelFont{
		Prepared: false,
		sizex:    0,
		sizey:    0,
		Chars: map[int]PixelChar{
			32: {0, 0, 3, 0, 0, 0, 0, []uint64{0b000, 0b000, 0b000, 0b000, 0b000}},
			46: {0, 0, 3, 0, 0, 0, 0, []uint64{0b000, 0b000, 0b000, 0b000, 0b010}},
			44: {0, 0, 0, 0, 0, 0, 0, []uint64{0b000, 0b000, 0b000, 0b010, 0b100}},
			33: {0, 0, 0, 0, 0, 0, 0, []uint64{0b010, 0b010, 0b010, 0b000, 0b010}},
			40: {0, 0, 0, 0, 0, 0, 0, []uint64{0b001, 0b010, 0b010, 0b010, 0b001}},
			41: {0, 0, 0, 0, 0, 0, 0, []uint64{0b010, 0b001, 0b001, 0b001, 0b010}},
			91: {0, 0, 0, 0, 0, 0, 0, []uint64{0b011, 0b010, 0b010, 0b010, 0b011}},
			93: {0, 0, 0, 0, 0, 0, 0, []uint64{0b011, 0b001, 0b001, 0b001, 0b011}},
			42: {0, 0, 0, 0, 0, 0, 0, []uint64{0b00000, 0b00100, 0b11111, 0b01010, 0b00000}},
			43: {0, 0, 0, 0, 0, 0, 0, []uint64{0b000, 0b010, 0b111, 0b010, 0b000}},
			45: {0, 0, 0, 0, 0, 0, 0, []uint64{0b000, 0b000, 0b111, 0b000, 0b000}},
			47: {0, 0, 0, 0, 0, 0, 0, []uint64{0b001, 0b010, 0b010, 0b100, 0b100}},
			92: {0, 0, 0, 0, 0, 0, 0, []uint64{0b100, 0b010, 0b010, 0b001, 0b001}},
			61: {0, 0, 0, 0, 0, 0, 0, []uint64{0b000, 0b111, 0b000, 0b111, 0b000}},
			65: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10001, 0b11111, 0b10001, 0b10001}},
			66: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11110, 0b10001, 0b11110, 0b10001, 0b11110}},
			67: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10001, 0b10000, 0b10001, 0b01110}},
			68: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11110, 0b10001, 0b10001, 0b10001, 0b11110}},
			69: {0, 0, 0, 0, 0, 0, 0, []uint64{0b1111, 0b1000, 0b1110, 0b1000, 0b1111}},
			70: {0, 0, 0, 0, 0, 0, 0, []uint64{0b1111, 0b1000, 0b1110, 0b1000, 0b1000}},
			71: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10000, 0b10111, 0b10001, 0b01110}},
			72: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b10001, 0b11111, 0b10001, 0b10001}},
			73: {0, 0, 0, 0, 0, 0, 0, []uint64{0b111, 0b010, 0b010, 0b010, 0b111}},
			74: {0, 0, 0, 0, 0, 0, 2, []uint64{0b0001, 0b0001, 0b0001, 0b1001, 0b0110}},
			75: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b11110, 0b10100, 0b10010, 0b10001}},
			76: {0, 0, 0, 0, 0, 1, 0, []uint64{0b1000, 0b1000, 0b1000, 0b1000, 0b1111}},
			77: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b11011, 0b10101, 0b10001, 0b10001}},
			78: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b11001, 0b10101, 0b10011, 0b10001}},
			79: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10001, 0b10001, 0b10001, 0b01110}},
			80: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11110, 0b10001, 0b11110, 0b10000, 0b10000}},
			81: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10001, 0b10001, 0b10010, 0b01101}},
			82: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11110, 0b10001, 0b11110, 0b10010, 0b10001}},
			83: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01111, 0b10000, 0b01110, 0b00001, 0b11110}},
			84: {0, 0, 0, 0, 0, 2, 1, []uint64{0b11111, 0b00100, 0b00100, 0b00100, 0b00100}},
			85: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b10001, 0b10001, 0b10001, 0b01110}},
			86: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b10001, 0b10001, 0b01010, 0b00100}},
			87: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b10001, 0b10101, 0b11011, 0b10001}},
			88: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b01010, 0b00100, 0b01010, 0b10001}},
			89: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10001, 0b01010, 0b00100, 0b00100, 0b00100}},
			90: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11111, 0b00010, 0b00100, 0b01000, 0b11111}},
			48: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10001, 0b10101, 0b10001, 0b01110}},
			49: {0, 0, 0, 0, 0, 0, 0, []uint64{0b010, 0b110, 0b010, 0b010, 0b111}},
			50: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11110, 0b00001, 0b01110, 0b10000, 0b11111}},
			51: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11110, 0b00001, 0b01110, 0b00001, 0b11110}},
			52: {0, 0, 0, 0, 0, 0, 0, []uint64{0b10010, 0b10010, 0b11111, 0b00010, 0b00010}},
			53: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11111, 0b10000, 0b11110, 0b00001, 0b11110}},
			54: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10000, 0b11110, 0b10001, 0b01110}},
			55: {0, 0, 0, 0, 0, 0, 0, []uint64{0b11111, 0b00001, 0b00010, 0b00100, 0b01000}},
			56: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10001, 0b01110, 0b10001, 0b01110}},
			57: {0, 0, 0, 0, 0, 0, 0, []uint64{0b01110, 0b10001, 0b01111, 0b00001, 0b01110}},
		},
	}
	f := p.PrepareFont(StdFont)
	return f
}
